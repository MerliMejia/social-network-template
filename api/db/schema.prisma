datasource db {
  provider = "postgresql"
  url      = env("TEST_DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

model User {
  id                  Int         @id @default(autoincrement())
  email               String      @unique
  hashedPassword      String
  salt                String
  resetToken          String?
  resetTokenExpiresAt DateTime?
  name                String
  headline            String?
  posts               Post[]
  profileImg          ProfileImg? @relation(fields: [profileImgId], references: [id])
  profileImgId        Int?
  headerImg           HeaderImg?  @relation(fields: [headerImgId], references: [id])
  headerImgId         Int?
  following           Following[]
  followers           Followers[]
  website             String?
  facebook            String?
  twitter             String?
  instagram           String?
  youtube             String?
}

model Following {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model Followers {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model ProfileImg {
  id     Int    @id @default(autoincrement())
  file   File   @relation(fields: [fileId], references: [id])
  User   User[]
  fileId Int
}

model HeaderImg {
  id     Int    @id @default(autoincrement())
  file   File   @relation(fields: [fileId], references: [id])
  User   User[]
  fileId Int
}

model Post {
  id       Int      @id @default(autoincrement())
  title    String
  content  String
  tags     String[]
  likes    Int
  author   User     @relation(fields: [authorId], references: [id])
  authorId Int
}

model File {
  id         Int          @id @default(autoincrement())
  path       String
  url        String
  ProfileImg ProfileImg[]
  HeaderImg  HeaderImg[]
}
